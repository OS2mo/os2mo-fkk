# Generated by ariadne-codegen on 2024-08-08 21:31
# Source: queries.graphql

from datetime import datetime
from typing import List
from typing import Optional
from uuid import UUID

from pydantic import Field

from .base_model import BaseModel


class GetClass(BaseModel):
    classes: "GetClassClasses"


class GetClassClasses(BaseModel):
    objects: List["GetClassClassesObjects"]


class GetClassClassesObjects(BaseModel):
    validities: List["GetClassClassesObjectsValidities"]


class GetClassClassesObjectsValidities(BaseModel):
    validity: "GetClassClassesObjectsValiditiesValidity"
    facet_uuid: UUID
    uuid: UUID
    user_key: str
    name: str
    parent_uuid: Optional[UUID]


class GetClassClassesObjectsValiditiesValidity(BaseModel):
    from_: Optional[datetime] = Field(alias="from")
    to: Optional[datetime]


GetClass.update_forward_refs()
GetClassClasses.update_forward_refs()
GetClassClassesObjects.update_forward_refs()
GetClassClassesObjectsValidities.update_forward_refs()
GetClassClassesObjectsValiditiesValidity.update_forward_refs()
